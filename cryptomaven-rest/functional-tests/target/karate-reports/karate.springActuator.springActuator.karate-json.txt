{"failedCount":5,"prefixedPath":"classpath:karate\/springActuator\/springActuator.feature","packageQualifiedName":"karate.springActuator.springActuator","loopIndex":-1,"relativePath":"karate\/springActuator\/springActuator.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":808000,"millis":0.808,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":8,"prefix":"*","index":0,"text":"url baseUrl"},"stepLog":"13:34:39.822 karate.env system property was: null \n13:34:39.822 karate.env is: local \n13:34:39.822 Database Password: abc123!! \n13:34:39.823 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":623600,"millis":0.6236,"status":"passed"},"step":{"line":13,"prefix":"Given","index":0,"text":"path 'actuator\/' + 'health'"}},{"result":{"nanos":18173500,"millis":18.1735,"status":"passed"},"step":{"line":14,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:39.828 request:\n1 > GET http:\/\/localhost:8083\/actuator\/health\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:39.843 response time in milliseconds: 15\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:39 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":95600,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 15, url: http:\/\/localhost:8083\/actuator\/health, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","millis":0.0956,"status":"failed"},"step":{"line":15,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:39.844 classpath:karate\/springActuator\/springActuator.feature:15\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 15, url: http:\/\/localhost:8083\/actuator\/health, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":3,"text":"json res = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":4,"text":"def payload = res.data"}}],"line":23,"description":"","durationMillis":19.7007,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 15, url: http:\/\/localhost:8083\/actuator\/health, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","executorName":"main","name":"Spring REST Framework","startTime":1744220079821,"refId":"[1.1:23]","endTime":1744220079844,"exampleData":{"_PATH":"health","VAR_1":"\"VAR_1\"","VAR_2":"\"VAR_2\"","VAR_3":"\"VAR_3\"","VAR_":"\"VAR_\""},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":272900,"millis":0.2729,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":8,"prefix":"*","index":0,"text":"url baseUrl"},"stepLog":"13:34:39.849 karate.env system property was: null \n13:34:39.849 karate.env is: local \n13:34:39.850 Database Password: abc123!! \n13:34:39.850 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":517500,"millis":0.5175,"status":"passed"},"step":{"line":13,"prefix":"Given","index":0,"text":"path 'actuator\/' + 'info'"}},{"result":{"nanos":13885200,"millis":13.8852,"status":"passed"},"step":{"line":14,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:39.854 request:\n1 > GET http:\/\/localhost:8083\/actuator\/info\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:39.865 response time in milliseconds: 11\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:39 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":85500,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 11, url: http:\/\/localhost:8083\/actuator\/info, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","millis":0.0855,"status":"failed"},"step":{"line":15,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:39.866 classpath:karate\/springActuator\/springActuator.feature:15\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 11, url: http:\/\/localhost:8083\/actuator\/info, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":3,"text":"json res = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":4,"text":"def payload = res.data"}}],"line":24,"description":"","durationMillis":14.7611,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 11, url: http:\/\/localhost:8083\/actuator\/info, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","executorName":"main","name":"Spring REST Framework","startTime":1744220079849,"refId":"[1.2:24]","endTime":1744220079866,"exampleData":{"_PATH":"info","VAR_1":"\"VAR_1\"","VAR_2":"\"VAR_2\"","VAR_3":"\"VAR_3\"","VAR_":"\"VAR_\""},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":375900,"millis":0.3759,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":8,"prefix":"*","index":0,"text":"url baseUrl"},"stepLog":"13:34:39.871 karate.env system property was: null \n13:34:39.872 karate.env is: local \n13:34:39.872 Database Password: abc123!! \n13:34:39.872 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":503000,"millis":0.503,"status":"passed"},"step":{"line":13,"prefix":"Given","index":0,"text":"path 'actuator\/' + 'env'"}},{"result":{"nanos":20550800,"millis":20.5508,"status":"passed"},"step":{"line":14,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:39.880 request:\n1 > GET http:\/\/localhost:8083\/actuator\/env\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:39.894 response time in milliseconds: 14\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:39 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":96600,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/actuator\/env, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","millis":0.0966,"status":"failed"},"step":{"line":15,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:39.895 classpath:karate\/springActuator\/springActuator.feature:15\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/actuator\/env, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":3,"text":"json res = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":4,"text":"def payload = res.data"}}],"line":25,"description":"","durationMillis":21.5263,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/actuator\/env, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","executorName":"main","name":"Spring REST Framework","startTime":1744220079871,"refId":"[1.3:25]","endTime":1744220079895,"exampleData":{"_PATH":"env","VAR_1":"\"VAR_1\"","VAR_2":"\"VAR_2\"","VAR_3":"\"VAR_3\"","VAR_":"\"VAR_\""},"exampleIndex":2},{"sectionIndex":0,"stepResults":[{"result":{"nanos":320800,"millis":0.3208,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":8,"prefix":"*","index":0,"text":"url baseUrl"},"stepLog":"13:34:39.900 karate.env system property was: null \n13:34:39.901 karate.env is: local \n13:34:39.901 Database Password: abc123!! \n13:34:39.901 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":645100,"millis":0.6451,"status":"passed"},"step":{"line":13,"prefix":"Given","index":0,"text":"path 'actuator\/' + 'metrics'"}},{"result":{"nanos":14228400,"millis":14.2284,"status":"passed"},"step":{"line":14,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:39.905 request:\n1 > GET http:\/\/localhost:8083\/actuator\/metrics\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:39.917 response time in milliseconds: 12\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:39 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":89700,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 12, url: http:\/\/localhost:8083\/actuator\/metrics, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","millis":0.0897,"status":"failed"},"step":{"line":15,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:39.918 classpath:karate\/springActuator\/springActuator.feature:15\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 12, url: http:\/\/localhost:8083\/actuator\/metrics, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":3,"text":"json res = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":4,"text":"def payload = res.data"}}],"line":26,"description":"","durationMillis":15.284,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 12, url: http:\/\/localhost:8083\/actuator\/metrics, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","executorName":"main","name":"Spring REST Framework","startTime":1744220079900,"refId":"[1.4:26]","endTime":1744220079918,"exampleData":{"_PATH":"metrics","VAR_1":"\"VAR_1\"","VAR_2":"\"VAR_2\"","VAR_3":"\"VAR_3\"","VAR_":"\"VAR_\""},"exampleIndex":3},{"sectionIndex":0,"stepResults":[{"result":{"nanos":138800,"millis":0.1388,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":8,"prefix":"*","index":0,"text":"url baseUrl"},"stepLog":"13:34:39.923 karate.env system property was: null \n13:34:39.923 karate.env is: local \n13:34:39.923 Database Password: abc123!! \n13:34:39.924 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":623200,"millis":0.6232,"status":"passed"},"step":{"line":13,"prefix":"Given","index":0,"text":"path 'actuator\/' + 'loggers'"}},{"result":{"nanos":14205100,"millis":14.2051,"status":"passed"},"step":{"line":14,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:39.929 request:\n1 > GET http:\/\/localhost:8083\/actuator\/loggers\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:39.941 response time in milliseconds: 12\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:39 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":102000,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 12, url: http:\/\/localhost:8083\/actuator\/loggers, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","millis":0.102,"status":"failed"},"step":{"line":15,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:39.942 classpath:karate\/springActuator\/springActuator.feature:15\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 12, url: http:\/\/localhost:8083\/actuator\/loggers, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":3,"text":"json res = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":4,"text":"def payload = res.data"}}],"line":27,"description":"","durationMillis":15.0691,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 12, url: http:\/\/localhost:8083\/actuator\/loggers, response: \n\nclasspath:karate\/springActuator\/springActuator.feature:15","executorName":"main","name":"Spring REST Framework","startTime":1744220079922,"refId":"[1.5:27]","endTime":1744220079943,"exampleData":{"_PATH":"loggers","VAR_1":"\"VAR_1\"","VAR_2":"\"VAR_2\"","VAR_3":"\"VAR_3\"","VAR_":"\"VAR_\""},"exampleIndex":4}],"callDepth":0,"name":"Spring REST feature api health,info,env,metrics,loggers,auditevents,httptrace","description":"","resultDate":"2025-04-09 01:34:39 PM","durationMillis":86.3412,"passedCount":0}