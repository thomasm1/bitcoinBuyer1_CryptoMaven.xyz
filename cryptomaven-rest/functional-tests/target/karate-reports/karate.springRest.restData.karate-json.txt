{"failedCount":3,"prefixedPath":"classpath:karate\/springRest\/restData.feature","packageQualifiedName":"karate.springRest.restData","loopIndex":-1,"relativePath":"karate\/springRest\/restData.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2909000,"millis":2.909,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":6,"prefix":"*","index":0,"text":"url baseUrl + '\/'"},"stepLog":"13:34:40.079 karate.env system property was: null \n13:34:40.080 karate.env is: local \n13:34:40.080 Database Password: abc123!! \n13:34:40.080 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":1962400,"millis":1.9624,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":1,"text":"def id = 20"}},{"result":{"nanos":462700,"millis":0.4627,"status":"passed"},"step":{"line":10,"prefix":"Given","index":0,"text":"path 'rest\/users'"}},{"result":{"nanos":16923600,"millis":16.9236,"status":"passed"},"step":{"line":11,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:40.089 request:\n1 > GET http:\/\/localhost:8083\/rest\/users\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:40.103 response time in milliseconds: 14\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:40 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":93800,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/rest\/users, response: \n\nclasspath:karate\/springRest\/restData.feature:12","millis":0.0938,"status":"failed"},"step":{"line":12,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:40.105 classpath:karate\/springRest\/restData.feature:12\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/rest\/users, response: \n\nclasspath:karate\/springRest\/restData.feature:12\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":13,"prefix":"*","index":3,"text":"def users = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":14,"prefix":"*","index":4,"text":"match users._embedded.users != null"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":15,"prefix":"*","index":5,"text":"match users.page.size == '#number'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":6,"text":"match users.page.totalPages == '#number'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":7,"text":"match users.page.number == '#number'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":18,"prefix":"*","index":8,"text":"print users"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":19,"prefix":"*","index":9,"text":"print id"}}],"line":9,"description":"","durationMillis":22.3515,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/rest\/users, response: \n\nclasspath:karate\/springRest\/restData.feature:12","executorName":"main","name":"Get All Users","startTime":1744220080078,"refId":"[1:9]","endTime":1744220080105,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":169300,"millis":0.1693,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":6,"prefix":"*","index":0,"text":"url baseUrl + '\/'"},"stepLog":"13:34:40.110 karate.env system property was: null \n13:34:40.110 karate.env is: local \n13:34:40.110 Database Password: abc123!! \n13:34:40.111 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":226000,"millis":0.226,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":1,"text":"def id = 20"}},{"result":{"nanos":699600,"millis":0.6996,"status":"passed"},"step":{"line":23,"prefix":"Given","index":0,"text":"path 'rest\/users\/' + 20"}},{"result":{"nanos":15486800,"millis":15.4868,"status":"passed"},"step":{"line":24,"prefix":"When","index":1,"text":"method get"},"stepLog":"13:34:40.115 request:\n1 > GET http:\/\/localhost:8083\/rest\/users\/20\n1 > Authorization: Bearer null\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:34:40.128 response time in milliseconds: 13\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:40 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":89200,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 13, url: http:\/\/localhost:8083\/rest\/users\/20, response: \n\nclasspath:karate\/springRest\/restData.feature:25","millis":0.0892,"status":"failed"},"step":{"line":25,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"13:34:40.129 classpath:karate\/springRest\/restData.feature:25\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 13, url: http:\/\/localhost:8083\/rest\/users\/20, response: \n\nclasspath:karate\/springRest\/restData.feature:25\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"*","index":3,"text":"def user = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"*","index":4,"text":"match user.username == '#string'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"*","index":5,"text":"match user.email == '#string'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"*","index":6,"text":"match user._links.self.href == baseUrl + 'rest\/users\/' + 20"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"*","index":7,"text":"print user"}}],"line":22,"description":"","durationMillis":16.6709,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 13, url: http:\/\/localhost:8083\/rest\/users\/20, response: \n\nclasspath:karate\/springRest\/restData.feature:25","executorName":"main","name":"Get All Users","startTime":1744220080109,"refId":"[2:22]","endTime":1744220080129,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":173100,"millis":0.1731,"status":"passed"},"step":{"comments":["#    * url 'http:\/\/52.3.58.191:8083\/api'","#    * url 'http:\/\/localhost:8083\/api\/'"],"background":true,"line":6,"prefix":"*","index":0,"text":"url baseUrl + '\/'"},"stepLog":"13:34:40.134 karate.env system property was: null \n13:34:40.134 karate.env is: local \n13:34:40.134 Database Password: abc123!! \n13:34:40.134 Using Local or H2 environment. Base URL: http:\/\/localhost:8083\/ \n"},{"result":{"nanos":347000,"millis":0.347,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":1,"text":"def id = 20"}},{"result":{"nanos":54600,"millis":0.0546,"status":"passed"},"step":{"line":34,"prefix":"Given","index":0,"text":"path 'rest\/users'"}},{"result":{"nanos":353200,"millis":0.3532,"status":"passed"},"step":{"endLine":46,"line":35,"prefix":"And","docString":"{\n\"username\": \"newuser@gmail.com\",\n\"password\": \"newpassword\",\n\"firstName\": \"New\",\n\"lastName\": \"User\",\n\"userType\": 1,\n\"email\": \"newuser@gmail.com\",\n\"isActive\": 1\n}","index":1,"text":"request"}},{"result":{"nanos":21232400,"millis":21.2324,"status":"passed"},"step":{"line":47,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:34:40.139 request:\n1 > POST http:\/\/localhost:8083\/rest\/users\n1 > Authorization: Bearer null\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 147\n1 > Host: localhost:8083\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n1 > Accept-Encoding: gzip,deflate\n{\"username\":\"newuser@gmail.com\",\"password\":\"newpassword\",\"firstName\":\"New\",\"lastName\":\"User\",\"userType\":1,\"email\":\"newuser@gmail.com\",\"isActive\":1}\n\n13:34:40.157 response time in milliseconds: 17\n1 < 401\n1 < X-Content-Type-Options: nosniff\n1 < X-XSS-Protection: 0\n1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n1 < Pragma: no-cache\n1 < Expires: 0\n1 < X-Frame-Options: SAMEORIGIN\n1 < Content-Length: 0\n1 < Date: Wed, 09 Apr 2025 17:34:40 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n\n"},{"result":{"nanos":15000,"millis":0.015,"status":"passed"},"step":{"line":48,"prefix":"Then","index":3,"text":"status 401"}},{"result":{"nanos":122000,"millis":0.122,"status":"passed"},"step":{"comments":["#    * def newUser = response.data","#    * match newUser.username == 'newuser@gmail.com'","#    * print newUser","# Test - Update Existing User (PUT)"],"line":55,"prefix":"*","index":4,"text":"path 'rest\/users\/' + 20"}},{"result":{"nanos":266500,"millis":0.2665,"status":"passed"},"step":{"endLine":63,"line":56,"prefix":"And","docString":"{\n\"userId\":20\n  \"firstName\": \"Updated\",\n  \"lastName\": \"User\"\n  }","index":5,"text":"request"}},{"result":{"nanos":21406100,"millis":21.4061,"status":"passed"},"step":{"line":64,"prefix":"When","index":6,"text":"method put"},"stepLog":"13:34:40.160 request:\n2 > PUT http:\/\/localhost:8083\/rest\/users\/20\n2 > Authorization: Bearer null\n2 > Content-Type: application\/json; charset=UTF-8\n2 > Content-Length: 63\n2 > Host: localhost:8083\n2 > Connection: Keep-Alive\n2 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n2 > Accept-Encoding: gzip,deflate\n{\"userId\":\"20\\n  \\\"firstName\\\": \\\"Updated\\\"\",\"lastName\":\"User\"}\n\n13:34:40.178 response time in milliseconds: 17\n2 < 401\n2 < X-Content-Type-Options: nosniff\n2 < X-XSS-Protection: 0\n2 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n2 < Pragma: no-cache\n2 < Expires: 0\n2 < X-Frame-Options: SAMEORIGIN\n2 < Content-Length: 0\n2 < Date: Wed, 09 Apr 2025 17:34:40 GMT\n2 < Keep-Alive: timeout=60\n2 < Connection: keep-alive\n\n"},{"result":{"nanos":13600,"millis":0.0136,"status":"passed"},"step":{"line":65,"prefix":"Then","index":7,"text":"status 401"}},{"result":{"nanos":953300,"millis":0.9533,"status":"passed"},"step":{"comments":["#    * def updatedUser = response","#    * match updatedUser.firstName == 'Updated'","#    * match updatedUser.lastName == 'User'","#    * print updatedUser","#    * id =   newUser.userId","#    * path 'rest\/users\/' + id","#    When method delete","#    Then status 204","#    * print 'User deleted successfully'","# Test - Verify User Deletion (GET)","#    * path 'rest\/users\/' + 24","#    When method get","#    Then status 404","#    * print 'User not found, deletion verified'","# Test - Retrieve User Addresses"],"line":86,"prefix":"*","index":8,"text":"path 'rest\/users\/'+ id + '\/addresses'"}},{"result":{"nanos":16452800,"millis":16.4528,"status":"passed"},"step":{"line":87,"prefix":"When","index":9,"text":"method get"},"stepLog":"13:34:40.182 request:\n3 > GET http:\/\/localhost:8083\/rest\/users\/20\/addresses\n3 > Authorization: Bearer null\n3 > Host: localhost:8083\n3 > Connection: Keep-Alive\n3 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.10)\n3 > Accept-Encoding: gzip,deflate\n\n\n13:34:40.197 response time in milliseconds: 14\n3 < 401\n3 < X-Content-Type-Options: nosniff\n3 < X-XSS-Protection: 0\n3 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n3 < Pragma: no-cache\n3 < Expires: 0\n3 < X-Frame-Options: SAMEORIGIN\n3 < Content-Length: 0\n3 < Date: Wed, 09 Apr 2025 17:34:40 GMT\n3 < Keep-Alive: timeout=60\n3 < Connection: keep-alive\n\n"},{"result":{"nanos":86200,"errorMessage":"status code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/rest\/users\/20\/addresses, response: \n\nclasspath:karate\/springRest\/restData.feature:88","millis":0.0862,"status":"failed"},"step":{"line":88,"prefix":"Then","index":10,"text":"status 200"},"stepLog":"13:34:40.197 classpath:karate\/springRest\/restData.feature:88\nThen status 200\nstatus code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/rest\/users\/20\/addresses, response: \n\nclasspath:karate\/springRest\/restData.feature:88\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"*","index":11,"text":"def addresses = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"*","index":12,"text":"match addresses._embedded.addresses != null"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"*","index":13,"text":"print addresses"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Test - Retrieve User Roles"],"line":94,"prefix":"*","index":14,"text":"path 'rest\/users\/'+ id + '\/roles'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":95,"prefix":"When","index":15,"text":"method get"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":96,"prefix":"Then","index":16,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":97,"prefix":"*","index":17,"text":"def roles = response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":98,"prefix":"*","index":18,"text":"match roles._embedded.roles != null"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":99,"prefix":"*","index":19,"text":"print roles"}}],"line":33,"description":"","durationMillis":61.4758,"failed":true,"error":"status code was: 401, expected: 200, response time in milliseconds: 14, url: http:\/\/localhost:8083\/rest\/users\/20\/addresses, response: \n\nclasspath:karate\/springRest\/restData.feature:88","executorName":"main","name":"Create New User","startTime":1744220080133,"refId":"[3:33]","endTime":1744220080197,"exampleIndex":-1}],"callDepth":0,"name":"Thorough Testing of Spring Data REST APIs","description":"","resultDate":"2025-04-09 01:34:40 PM","durationMillis":100.4982,"passedCount":0}