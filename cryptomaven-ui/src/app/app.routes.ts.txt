// import { Routes, RouterModule } from '@angular/router';
import { NftsComponent } from './nft/nfts.component'; 
import { ChainComponent } from './chain/chain/chain.component'; 
import { LandingComponent } from './layout/landing/landing.component';

import { SearchAddressesComponent } from './chain/search-addresses/search-addresses.component';
 
import { ContactusComponent } from './layout/contactus/contactus.component';
import { LoginComponent } from './users/login/login.component';
import { RegisterComponent } from './users/register/register.component';

import { UsersComponent } from './users/users.component';
import { HomeComponent } from './layout/home.component';
// import { UserGuardService } from './services/auth/user-guard.service'
// import { AdminGuardService } from './services/auth/admin-guard.service';
import { AddressResolver } from './nft/address-resolver';
import { AddressComponent } from './nft/address/address.component';
// import { AdminuserComponent } from './users/adminuser.component';
import { ProtoCoinsComponent } from './dashboard/proto-coins/proto-coins.component';
import { DashboardItemComponent } from './dashboard/dashboard-item/dashboard-item.component';

import { CanMatchFn, RedirectCommand, Router, Routes } from '@angular/router';
import { inject } from '@angular/core';

import { routes as userRoutes } from './users/users.routes';
import { NoTaskComponent } from './tasks/no-task/no-task.component';
import {
  UserTasksComponent,
  resolveTitle,
  resolveUserName,
} from './users/user-tasks/user-tasks.component';
import { NotFoundComponent } from './not-found/not-found.component';

const thisCanMatch: CanMatchFn = (route, segments) => {
  const router = inject(Router);
  const shouldGetAccess = Math.random();
  if (shouldGetAccess < 1) {
    return true;
  }
  return new RedirectCommand(router.parseUrl('/unauthorized'));
};

export const routes: Routes = [
  
  { path: '', component: ProtoCoinsComponent }, 
  { path: 'login', component: LoginComponent },
  { path: 'register', component: RegisterComponent },

  { path: 'chains', component: ChainComponent },
  { path: 'chains/:id', component: ChainComponent },

  // { path: 'coins', component: CoinComponent },
  // { path: 'coins/:id', component: CoinComponent },

  
  { path: "proto-coins", component: ProtoCoinsComponent }, 
 { path: 'proto-coins/new', component: DashboardItemComponent}, 

  { path: 'LandingComponent', component: LandingComponent },
  { path: 'LandingComponent/:id', component: LandingComponent },


  { path: 'home', component: HomeComponent },

  { path: 'nfts', component: NftsComponent },
  { path: "search-addresses", component: SearchAddressesComponent }, 
 { path: 'addresses', component: AddressComponent}, 
  {
    path: 'addresses/:name ', component: AddressComponent,
    resolve: {
      nftRef: AddressResolver
    }
  },
  { path: 'contact', component: ContactusComponent },
  // { path: 'servers', component: ChainServersComponent }, 

  { path: 'users', component: UsersComponent },//, canActivate: [AdminGuardService, UserGuardService] },
  { path: 'users/:email', component: UsersComponent },//, canActivate: [AdminGuardService, UserGuardService] },
  
  // { path: 'admin/users', component: AdminuserComponent },//, canActivate: [AdminGuardService, UserGuardService] },
  // { path: 'admin/users/:email', component: AdminuserComponent },//, canActivate: [AdminGuardService, UserGuardService] }, 
  // { path: 'tiles/:albumId', component: PhotosComponent },   
  { path: '**', redirectTo: '' },
  // {
  //   path: '', // <your-domain>/
  //   component: NoTaskComponent,
  //   // redirectTo: '/users/u1',
  //   // pathMatch: 'full'
  //   title: 'No task selected',
  // },
  {
    path: 'users/:userId', // <your-domain>/users/<uid>
    component: UserTasksComponent,
    children: userRoutes,
    canMatch: [thisCanMatch],
    data: {
      message: 'Hello!',
    },
    resolve: {
      userName: resolveUserName,
    },
    title: resolveTitle,
  },
  {
    path: '**',
    component: NotFoundComponent,
  },
];
